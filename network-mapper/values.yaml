# Local configuration for network mapper chart
opentelemetry:
  enable: false
  metricName: traces_service_graph_request_total
enableInternetFacingTrafficReporting: true

mapper:
  repository: otterize
  image: network-mapper
  pullPolicy:
  pullSecrets:
  resources: { }
  extraEnvVars:
  excludeNamespaces:
    - 'istio-system'
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


sniffer:
  enable: true # enable/disable entire installation of the network sniffer
  repository: otterize
  image: network-mapper-sniffer
  pullPolicy:
  pullSecrets:
  tolerations: []
  #The options to add tolerations
  # tolerations:
  # - operator: Exists
  priorityClassName: ""  
  resources: { }
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

kafkawatcher:
  enable: false # enable/disable entire installation of the kafka-watcher
  repository: otterize
  image: network-mapper-kafka-watcher
  pullPolicy:
  pullSecrets:
  resources: { }
  # Kafka servers to watch, specified as `pod.namespace` items.
  kafkaServers: []
  # Interval between reports of watcher results to the network-mapper
  kafkaReportInterval:
  # Interval between watcher polls of its Kafka servers
  kafkaCooldownInterval:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

istiowatcher:
  enable: true
  repository: otterize
  image: network-mapper-istio-watcher
  tag:
  pullPolicy:
  pullSecrets:
  resources: { }
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

webhook:
  generateSelfSignedCert: true

debug: false
allowGetAllResources: true

iamlive:
  repository: otterize
  image: network-mapper-iamlive
  tag:
  pullPolicy:
  pullSecrets:

aws:
  visibility:
    enabled: false

# Fields from All-in-one chart
global:
  # Extra annotations for deployed pods
  podAnnotations: {}
  # Extra labels for deployed pods
  podLabels: {}
  # Labels to add to all deployed objects
  commonLabels: {}
  # Annotations to add to all deployed objects
  commonAnnotations: {}

  # Specify an annotation name that by setting it, one can override otterize's service name resolution.
  serviceNameOverrideAnnotationName: intents.otterize.com/service-name

  # If defined overrides `allowGetAllResources`
  allowGetAllResources:
  otterizeCloud:
    apiAddress:
    credentials:
      # fill clientId and clientSecret in order to connect to Otterize Cloud
      clientId:
      clientSecret:
      # if specified, uses this Kubernetes SecretKeyRef instead of creating a secret with the value of clientSecret.
      clientSecretKeyRef:
        secretName:
        secretKey:

    # (optional) The name of a secret containing a single `CA.pem` file for an extra root CA used to connect to Otterize Cloud.
    # The secret should be placed in the same namespace as the Otterize deployment
    apiExtraCAPEMSecret:
  telemetry:
    enabled:
    usage:
      enabled:
    errors:
      enabled:
      stage:
      endpointAddress:
      networkMapperApiKey: d86195588a41fa03aa6711993bb1c765
