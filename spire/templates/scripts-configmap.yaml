apiVersion: v1
kind: ConfigMap
metadata:
  name: spire-scripts
  namespace: {{ .Release.Namespace }}
  labels:
    {{- with .Values.global.commonLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    app.kubernetes.io/version: {{ .Chart.Version }}
  annotations:
    {{- with .Values.global.commonAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    app.kubernetes.io/version: {{ .Chart.Version }}
data:
  init_entries.sh: |-
    set -e
    echo "waiting for spire process to start"
    while ! pgrep spire-server > /dev/null; do sleep 1; done
    SPIRE_SERVER_ROOT_PATH="/proc/$(pgrep spire-server)/root"
    alias spire_server="${SPIRE_SERVER_ROOT_PATH}/opt/spire/bin/spire-server"
    SOCKET_FLAG="-socketPath ${SPIRE_SERVER_ROOT_PATH}/tmp/spire-server/private/api.sock"

    echo "checking spire-server status"
    while ! spire_server entry show ${SOCKET_FLAG} &> /dev/null; do
      echo "waiting for spire-server to start..."
      sleep 2
    done
    echo "server is up!"

    # create spire entries for the agent and integration
    AGENT_SPIFFE_ID="spiffe://{{ .Values.global.spiffe.trustDomain }}/ns/{{ .Release.Namespace }}/sa/spire-agent"
    INTEGRATION_SPIFFE_ID="spiffe://{{ .Values.global.spiffe.trustDomain }}/{{ .Release.Namespace }}/credentials-operator-system"

    AGENT_SELECTORS="-selector k8s_psat:agent_ns:{{ .Release.Namespace }} -selector k8s_psat:agent_sa:{{ include "spire.serviceAccountName" . }}-agent"

    echo "ensuring agent entry"
    if spire_server entry show ${SOCKET_FLAG} -spiffeID $AGENT_SPIFFE_ID $AGENT_SELECTORS | grep -q "Found 0 entries" &> /dev/null; then
      spire_server entry create ${SOCKET_FLAG} -spiffeID $AGENT_SPIFFE_ID $AGENT_SELECTORS -node
    fi

    SPIRE_INTEGRATION_SELECTORS="-selector k8s:ns:{{ .Release.Namespace }} -selector k8s:pod-label:app:credentials-operator"
    echo "ensuring integration entry"
    if spire_server entry show ${SOCKET_FLAG} -spiffeID $INTEGRATION_SPIFFE_ID -parentID $AGENT_SPIFFE_ID $SPIRE_INTEGRATION_SELECTORS | grep -q "Found 0 entries" &> /dev/null; then
      spire_server entry create ${SOCKET_FLAG} -spiffeID $INTEGRATION_SPIFFE_ID -parentID $AGENT_SPIFFE_ID $SPIRE_INTEGRATION_SELECTORS -admin
    fi

    echo "spire initialized successfully!"
    while pgrep spire-server > /dev/null; do sleep 1; done