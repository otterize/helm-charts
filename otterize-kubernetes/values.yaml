deployment:
  spire: true
  credentialsOperator: true
  intentsOperator: true
  networkMapper: true

global:
  # Extra annotations for deployed pods
  podAnnotations: {}
  # Extra labels for deployed pods
  podLabels: {}
  # Labels to add to all deployed objects
  commonLabels: {}
  # Annotations to add to all deployed objects
  commonAnnotations: {}

  # Specify an annotation name that by setting it, one can override otterize's service name resolution.
  serviceNameOverrideAnnotationName: intents.otterize.com/service-name

  kubebuilder_rbac_proxy:
    image: otterize/kubebuilder-kube-rbac-proxy
    tag: v0.11.0
  otterizeCloud:
    useCloudToGenerateTLSCredentials: false
    credentials:
      # fill clientId and clientSecret in order to connect to Otterize Cloud
      clientId:
      clientSecret:
    # (optional) The name of a secret containing a single `CA.pem` file for an extra root CA used to connect to Otterize Cloud.
    # The secret should be placed in the same namespace as the Otterize deployment
    apiExtraCAPEMSecret:
  spire:
    serverServiceName: spire-server
  # If defined overrides `allowGetAllResources`
  allowGetAllResources:
  spiffe:
    trustDomain: "example.org"
    CASubject:
      country: "US"
      organization: "SPIRE"

  # Global telemetry configuration
  telemetry:
    enabled: true

# alias for intents-operator values
intentsOperator:
  operator:
    mode: defaultActive
    autoGenerateTLSUsingCredentialsOperator: true
    enableNetworkPolicyCreation: true
    enableKafkaACLCreation: true
    autoCreateNetworkPoliciesForExternalTraffic: true
    enableIstioPolicyCreation: true
  watchedNamespaces: null # by default, watch all
  watcher: {}

# alias for spire values
spire: {}

# alias for credentials-operator values
credentialsOperator: {}

# alias for network-mapper values
networkMapper:
  mapper: {}
  sniffer: {}
  kafkawatcher: {}
  istiowatcher: {}