apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- with .Values.global.commonLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    app: intents-operator
  annotations:
    {{- with .Values.global.commonAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    app.kubernetes.io/version: {{ .Chart.Version }}
    checksum/config: {{ include (print $.Template.BasePath "/extended-config-configmap.yaml") . | sha256sum }}
  name: intents-operator-controller-manager
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: intents-operator
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        intents.otterize.com/service-name: intents-operator
        {{ if and (.Values.operator.autoGenerateTLSUsingCredentialsOperator) (.Values.global.certificateProvider) }}
        credentials-operator.otterize.com/tls-secret-name: intents-operator-spire-tls-controller-manager
        {{- end }}
        {{- with .Values.global.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.commonAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        app.kubernetes.io/version: {{ .Chart.Version }}
      labels:
        {{- with .Values.global.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.commonLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        app: intents-operator
        app.kubernetes.io/version: {{ .Chart.Version }}
        {{ if .Values.global.azure.enabled }}
        azure.workload.identity/use: "true"
        {{ end }}
    spec:
    {{- if .Values.operator.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.operator.podSecurityContext | nindent 8 }}
    {{- end }}
      containers:
      - command:
        - /manager
        image: "{{ .Values.operator.repository }}/{{ .Values.operator.image }}:{{ default $.Chart.AppVersion .Values.operator.tag }}"
        {{ if .Values.operator.pullPolicy }}
        imagePullPolicy: {{ .Values.operator.pullPolicy }}
        {{ end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8181
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
          - containerPort: 9443
            name: webhook-server
            protocol: TCP
          - containerPort: 2112
            name: metrics
            protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8181
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {{- toYaml .Values.operator.resources | nindent 10 }}
        {{- if .Values.operator.containerSecurityContext }}
        securityContext:
          {{- toYaml .Values.operator.containerSecurityContext | nindent 10 }}
        {{- end }}
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: OTTERIZE_WATCHED_NAMESPACES
            value: {{ join " " .Values.watchedNamespaces | quote }}
          - name: OTTERIZE_ACTIVE_ENFORCEMENT_NAMESPACES
            value: {{ join " " .Values.enforcedNamespaces | quote }}
          {{ if .Values.global.otterizeCloud.apiAddress }}
          - name: OTTERIZE_API_ADDRESS
            value: "{{ .Values.global.otterizeCloud.apiAddress }}"
          {{ end }}
          {{ if .Values.global.otterizeCloud.credentials.clientId }}
          - name: OTTERIZE_CLIENT_ID
            value: "{{ .Values.global.otterizeCloud.credentials.clientId }}"
          {{ end }}
          {{ if (and .Values.global.otterizeCloud.credentials.clientSecretKeyRef.secretName .Values.global.otterizeCloud.credentials.clientSecretKeyRef.secretKey) }}
          - name: OTTERIZE_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.global.otterizeCloud.credentials.clientSecretKeyRef.secretName }}"
                key: "{{ .Values.global.otterizeCloud.credentials.clientSecretKeyRef.secretKey }}"
          {{ else if .Values.global.otterizeCloud.credentials.clientSecret }}
          - name: OTTERIZE_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: intents-operator-otterize-cloud-client-secret
                key: otterize-cloud-client-secret
          {{ end }}
          {{ if .Values.global.otterizeCloud.apiExtraCAPEMSecret }}
          - name: OTTERIZE_API_EXTRA_CA_PEM
            value: {{ template "otterize.operator.apiExtraCAPEM" }}
          {{ end }}
          {{ if .Values.global.serviceNameOverrideAnnotationName }}
          - name: OTTERIZE_SERVICE_NAME_OVERRIDE_ANNOTATION
            value: {{ .Values.global.serviceNameOverrideAnnotationName | quote }}
          {{ end }}
          - name: OTTERIZE_ENABLE_AWS_IAM_POLICY
            value: {{ .Values.global.aws.enabled | quote }}
          {{ if .Values.global.aws.eksClusterNameOverride }}
          - name: OTTERIZE_EKS_CLUSTER_NAME_OVERRIDE
            value: {{ .Values.global.aws.eksClusterNameOverride | quote }}
          {{ end }}
          - name: OTTERIZE_ENABLE_AZURE_IAM_POLICY
            value: {{ .Values.global.azure.enabled | quote }}
          {{ if .Values.global.azure.enabled }}
          - name: OTTERIZE_AZURE_SUBSCRIPTION_ID
            value: {{ required "You must specify the Azure subscription ID." .Values.global.azure.subscriptionID | quote }}
          - name: OTTERIZE_AZURE_RESOURCE_GROUP
            value: {{ required "You must specify the Azure resource group." .Values.global.azure.resourceGroup | quote }}
          - name: OTTERIZE_AZURE_AKS_CLUSTER_NAME
            value: {{ required "You must specify the AKS cluster name." .Values.global.azure.aksClusterName | quote }}
          {{ end }}
          - name: OTTERIZE_ENABLE_GCP_IAM_POLICY
            value: {{ .Values.global.gcp.enabled | quote }}
          {{- if .Values.global.telemetry.errors.stage }}
          - name: OTTERIZE_TELEMETRY_ERRORS_STAGE
            value: {{ .Values.global.telemetry.errors.stage | quote }}
          {{- end }}
          {{- if .Values.global.telemetry.errors.endpointAddress }}
          - name: OTTERIZE_TELEMETRY_ERRORS_ADDRESS
            value: {{ .Values.global.telemetry.errors.endpointAddress | quote }}
          {{- end }}
          {{- if .Values.global.telemetry.errors.intentsOperatorApiKey }}
          - name: OTTERIZE_TELEMETRY_ERRORS_API_KEY
            value: {{ .Values.global.telemetry.errors.intentsOperatorApiKey | quote }}
          {{- end }}
          {{- if eq true .Values.operator.enableIstioPolicyCreation }}
          - name: OTTERIZE_ENABLE_ISTIO_POLICY_CREATION
            value: "true"
          {{- end }}
          - name: OTTERIZE_ENFORCEMENT_DEFAULT_STATE
            value: {{ template "otterize.operator.mode" . }}
          {{- if eq false .Values.operator.enableNetworkPolicyCreation }}
          - name: OTTERIZE_ENABLE_NETWORK_POLICY_CREATION
            value: "false"
          {{- end }}
          {{- if eq false .Values.operator.enableKafkaACLCreation }}
          - name: OTTERIZE_ENABLE_KAFKA_ACL_CREATION
            value: "false"
          {{- end }}
          - name: OTTERIZE_ALLOW_EXTERNAL_TRAFFIC
            value: {{ template "otterize.operator.allowExternalTraffic" . }}
          {{ if and (.Values.operator.autoGenerateTLSUsingCredentialsOperator) (.Values.global.certificateProvider) }}
          - name: OTTERIZE_KAFKA_SERVER_TLS_CERT
            value: {{ include "otterize.operator.cert" . | quote}}
          - name: OTTERIZE_KAFKA_SERVER_TLS_KEY
            value: {{ include "otterize.operator.key" . | quote}}
          - name: OTTERIZE_KAFKA_SERVER_TLS_CA
            value: {{ include "otterize.operator.ca" . | quote }}
          {{- end }}
          {{- if eq false .Values.global.telemetry.enabled }}
          - name: OTTERIZE_TELEMETRY_ENABLED
            value: "false"
          {{- end }}
          {{- if eq false .Values.global.telemetry.usage.enabled }}
          - name: OTTERIZE_TELEMETRY_USAGE_ENABLED
            value: "false"
          {{- end }}
          {{- if eq false .Values.global.telemetry.errors.enabled }}
          - name: OTTERIZE_TELEMETRY_ERRORS_ENABLED
            value: "false"
          {{- end }}
          {{- if eq false .Values.operator.enableDatabasePolicyCreation }}
          - name: OTTERIZE_ENABLE_DATABASE_POLICY_CREATION
            value: "false"
          {{- end }}
          {{- if eq true .Values.operator.enableEgressNetworkPolicyCreation }}
          - name: OTTERIZE_EXP_ENABLE_EGRESS_NETWORK_POLICIES
            value: "true"
          {{- end }}
          {{- if .Values.global.aws.rolesAnywhere.enabled }}
          - name: OTTERIZE_ENABLE_AWS_IAM_ROLESANYWHERE
            value: "true"
          - name: OTTERIZE_ROLESANYWHERE_CLUSTER_NAME
            value: {{ .Values.global.aws.rolesAnywhere.clusterName | quote }}
          - name: AWS_REGION
            value: {{ .Values.global.aws.region | quote }}
          {{- end }}
          {{- if .Values.global.experimentalUseDockerImageAsServiceNameForJobs }}
          - name: OTTERIZE_USE_IMAGE_NAME_FOR_SERVICE_ID_FOR_JOBS
            value: "true"
          {{- end }}
          {{- if .Values.operator.extraEnvVars -}}
          {{- toYaml .Values.operator.extraEnvVars | nindent 10 -}}
          {{- end }}
          {{- if eq true .Values.debug }}
          - name: OTTERIZE_DEBUG
            value: "true"
          {{- end }}
        volumeMounts:
{{- if .Values.global.aws.rolesAnywhere.enabled }}
        - mountPath: /aws-config
          name: spiffe
          readOnly: true
{{- end }}
{{- if or .Values.global.aws.rolesAnywhere.enabled .Values.operator.ingressControllerConfigs }}
        - name: extended-config
          mountPath: /etc/otterize
          readOnly: true
{{- end }}
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
        {{ if and (.Values.operator.autoGenerateTLSUsingCredentialsOperator) (.Values.global.certificateProvider) }}
        - mountPath: {{ template "otterize.operator.tlsPath" }}
          name: spire-tls
          readOnly: true
        {{- end }}
        {{- if .Values.global.otterizeCloud.apiExtraCAPEMSecret }}
        - mountPath: {{ template "otterize.operator.apiExtraCAPath" }}
          name: api-extra-ca-pem
          readOnly: true
        {{- end }}
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: {{ .Values.global.kubebuilder_rbac_proxy.image }}:{{ .Values.global.kubebuilder_rbac_proxy.tag }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        {{- if .Values.operator.containerSecurityContext }}
        securityContext:
          {{- toYaml .Values.operator.containerSecurityContext | nindent 10 }}
        {{- end }}
      serviceAccountName: intents-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      {{ if and (or .Values.operator.autoGenerateTLSUsingCredentialsOperator .Values.global.certificateProvider) (.Values.global.certificateProvider) }}
      - name: spire-tls
        secret:
          secretName: intents-operator-spire-tls-controller-manager
          {{ if eq "cert-manager" .Values.global.certificateProvider }}
          items:
            - key: tls.crt
              path: cert.pem
            - key: tls.key
              path: key.pem
            - key: ca.crt
              path: ca.pem
          {{ end }}
      {{ end }}
      {{ if .Values.global.otterizeCloud.apiExtraCAPEMSecret }}
      - name: api-extra-ca-pem
        secret:
          secretName: {{ .Values.global.otterizeCloud.apiExtraCAPEMSecret }}
      {{ end }}
{{- if .Values.global.aws.rolesAnywhere.enabled }}
      - name: spiffe
        csi:
          driver: spiffe.csi.cert-manager.io
          readOnly: true
          volumeAttributes:
            aws.spiffe.csi.cert-manager.io/trust-profile: {{ (index .Values.global.aws.rolesAnywhere.accounts 0).intentsOperator.profileARN | quote }}
            aws.spiffe.csi.cert-manager.io/trust-anchor: {{ (index .Values.global.aws.rolesAnywhere.accounts 0).trustAnchorARN | quote }}
            aws.spiffe.csi.cert-manager.io/role: {{ (index .Values.global.aws.rolesAnywhere.accounts 0).intentsOperator.roleARN | quote }}
            aws.spiffe.csi.cert-manager.io/enable: "true"
            spiffe.csi.cert-manager.io/fs-group: "65532"
{{- end }}
{{- if or .Values.global.aws.rolesAnywhere.enabled .Values.operator.ingressControllerConfigs }}
      - name: extended-config
        configMap:
          name: intents-operator-config
{{- end }}
      - name: cert
