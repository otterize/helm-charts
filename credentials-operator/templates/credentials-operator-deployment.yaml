apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: credentials-operator
    {{- with .Values.global.commonLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with .Values.global.commonAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
    app.kubernetes.io/version: {{ .Chart.Version }}
  name: credentials-operator-controller-manager
  namespace: {{ .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: credentials-operator
  template:
    metadata:
      annotations:
        {{- with .Values.global.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.commonAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        app.kubernetes.io/version: {{ .Chart.Version }}
        kubectl.kubernetes.io/default-container: manager
      labels:
        {{- with .Values.global.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.global.commonLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        app.kubernetes.io/version: {{ .Chart.Version }}
        app: credentials-operator
    spec:
      serviceAccountName: credentials-operator-controller-manager
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: {{ .Values.global.kubebuilder_rbac_proxy.image }}:{{ .Values.global.kubebuilder_rbac_proxy.tag }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
             - "ALL"
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        {{- if .Values.spire.serverAddress }}
        - --spire-server-address={{.Values.spire.serverAddress}}
        {{- /* 
        if global.spire.serverServiceName it means that credentials-operator is deployed with spire 
        in that case the address will be serverService.Namespace:8081 
        */}}
        {{- else if .Values.global.spire.serverServiceName }}
        - --spire-server-address={{.Values.global.spire.serverServiceName}}.{{.Release.Namespace}}:8081
        {{- else }}
        - --spire-server-address=spire-server.{{.Release.Namespace}}:8081
        {{- end }}
        {{- if eq true .Values.global.otterizeCloud.useCloudToGenerateTLSCredentials }}
        {{- /*  Backward compatibility if still using this deprecated boolean */}}
        - --certificate-provider=otterize-cloud
        {{- else if .Values.global.certificateProvider }}
        - --certificate-provider={{.Values.global.certificateProvider}}
        {{- end }}
        {{- if eq "cert-manager" .Values.global.certificateProvider }}
          {{- if .Values.certManager.issuerName }}
        - --cert-manager-issuer={{.Values.certManager.issuerName }}
          {{- end }}
          {{- if eq true .Values.certManager.useClusterIssuer }}
        - --cert-manager-use-cluster-issuer=true
          {{- end }}
          {{- if eq true .Values.certManager.autoApprove }}
        - --cert-manager-approve-requests
          {{- end }}
        {{- end }}
        {{- if eq true .Values.global.aws.useSoftDelete }}
        - --aws-use-soft-delete=true
        {{- end }}
        {{ if eq true .Values.debug }}
        - --debug=true
        {{ end }}
        {{ if eq true .Values.global.aws.enabled }}
        - --enable-aws-serviceaccount-management=true
        {{ end }}
        - --leader-elect
        command:
        - /manager
        image: "{{ .Values.operator.repository }}/{{ .Values.operator.image }}:{{ default $.Chart.AppVersion .Values.operator.tag }}"
        {{ if .Values.operator.pullPolicy }}
        imagePullPolicy: {{ .Values.operator.pullPolicy }}
        {{ end }}
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          {{ if .Values.global.otterizeCloud.apiAddress }}
          - name: OTTERIZE_API_ADDRESS
            value: "{{ .Values.global.otterizeCloud.apiAddress }}"
          {{ end }}
          {{ if .Values.global.otterizeCloud.credentials.clientId }}
          - name: OTTERIZE_CLIENT_ID
            value: "{{ .Values.global.otterizeCloud.credentials.clientId }}"
          {{ end }}
          {{ if (and .Values.global.otterizeCloud.credentials.clientSecretKeyRef.secretName .Values.global.otterizeCloud.credentials.clientSecretKeyRef.secretKey) }}
          - name: OTTERIZE_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.global.otterizeCloud.credentials.clientSecretKeyRef.secretName }}"
                key: "{{ .Values.global.otterizeCloud.credentials.clientSecretKeyRef.secretKey }}"
          {{ else if .Values.global.otterizeCloud.credentials.clientSecret }}
          - name: OTTERIZE_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: intents-operator-otterize-cloud-client-secret
                key: otterize-cloud-client-secret
          {{ end }}
          {{ if .Values.global.serviceNameOverrideAnnotationName }}
          - name: OTTERIZE_SERVICE_NAME_OVERRIDE_ANNOTATION
            value: {{ .Values.global.serviceNameOverrideAnnotationName | quote }}
          {{ end }}
          {{ if .Values.global.otterizeCloud.apiExtraCAPEMSecret }}
          - name: OTTERIZE_API_EXTRA_CA_PEM
            value: {{ template "otterize.operator.apiExtraCAPEM" }}
          {{ end }}
          {{ if .Values.global.aws.eksClusterNameOverride }}
          - name: OTTERIZE_EKS_CLUSTER_NAME_OVERRIDE
            value: {{ .Values.global.aws.eksClusterNameOverride | quote }}
          {{ end }}
          {{- if eq false .Values.global.telemetry.enabled }}
          - name: OTTERIZE_TELEMETRY_ENABLED
            value: "false"
          {{- else }}
          - name: OTTERIZE_TELEMETRY_ENABLED
            value: "true"
          {{- end }}
          {{- if eq false .Values.global.telemetry.usage.enabled }}
          - name: OTTERIZE_TELEMETRY_USAGE_ENABLED
            value: "false"
          {{- else }}
          - name: OTTERIZE_TELEMETRY_USAGE_ENABLED
            value: "true"
          {{- end }}
          {{- if eq false .Values.global.telemetry.errors.enabled }}
          - name: OTTERIZE_TELEMETRY_ERRORS_ENABLED
            value: "false"
          {{- else }}
          - name: OTTERIZE_TELEMETRY_ERRORS_ENABLED
            value: "true"
          {{- end }}
          {{- if .Values.global.telemetry.errors.stage }}
          - name: OTTERIZE_TELEMETRY_ERRORS_STAGE
            value: {{ .Values.global.telemetry.errors.stage | quote }}
          {{- end }}
          {{- if .Values.global.telemetry.errors.endpointAddress }}
          - name: OTTERIZE_TELEMETRY_ERRORS_ADDRESS
            value: {{ .Values.global.telemetry.errors.endpointAddress | quote }}
          {{- end }}
          {{- if .Values.global.telemetry.errors.credentialsOperatorApiKey }}
          - name: OTTERIZE_TELEMETRY_ERRORS_API_KEY
            value: {{ .Values.global.telemetry.errors.credentialsOperatorApiKey | quote }}
          {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
             - "ALL"
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-cert
{{- if eq "false" (.Values.global.otterizeCloud.useCloudToGenerateTLSCredentials | toString) }}
        - mountPath: {{ .Values.spire.socketsPath }}
          name: spire-agent-socket
          readOnly: true
{{- end }}
        {{- if .Values.global.otterizeCloud.apiExtraCAPEMSecret }}
        - mountPath: {{ template "otterize.operator.apiExtraCAPath" }}
          name: api-extra-ca-pem
          readOnly: true
        {{- end }}
      securityContext:
        runAsNonRoot: true
      terminationGracePeriodSeconds: 10
      volumes:
{{- if eq "false" (.Values.global.otterizeCloud.useCloudToGenerateTLSCredentials | toString) }}
      - hostPath:
          path: {{ .Values.spire.socketsPath }}
          type: Directory
        name: spire-agent-socket
{{- end }}
      {{ if .Values.global.otterizeCloud.apiExtraCAPEMSecret }}
      - name: api-extra-ca-pem
        secret:
          secretName: {{ .Values.global.otterizeCloud.apiExtraCAPEMSecret }}
      {{ end }}
      - name: webhook-cert
